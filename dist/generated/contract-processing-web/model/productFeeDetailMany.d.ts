/**
 * Generated by orval v6.24.0 üç∫
 * Do not edit manually.
 * contract-processing-web
 * OpenAPI spec version: 0.0.1
 */
import type { ProductFeeDetailManyCondition } from "./productFeeDetailManyCondition";
import type { ProductFeeDetailManyCountryCode } from "./productFeeDetailManyCountryCode";
import type { ProductFeeDetailManyCreateActions } from "./productFeeDetailManyCreateActions";
import type { ProductFeeDetailManyInitialState } from "./productFeeDetailManyInitialState";
import type { OfferFeeMany } from "./offerFeeMany";
import type { ProductFeeDetailManyPriorityIncrement } from "./productFeeDetailManyPriorityIncrement";
import type { ProductFeeDetailManyRoundingFormula } from "./productFeeDetailManyRoundingFormula";
import type { ProductFeeDetailManyRoundingType } from "./productFeeDetailManyRoundingType";
export interface ProductFeeDetailMany {
    apply_discount?: boolean;
    archived?: boolean;
    charge_check_point_id?: number;
    charge_priority?: number | null;
    code: string;
    condition?: ProductFeeDetailManyCondition;
    country_code?: ProductFeeDetailManyCountryCode;
    create_actions?: ProductFeeDetailManyCreateActions;
    created?: string;
    due_check_point_id?: number;
    due_on_payday?: boolean;
    future_repay?: boolean;
    id?: number;
    initial_state?: ProductFeeDetailManyInitialState;
    is_business_fee?: boolean;
    offer_fees?: OfferFeeMany[];
    partial_repayment?: boolean;
    priority_increment?: ProductFeeDetailManyPriorityIncrement;
    product_id?: number;
    repay_priority?: number;
    rounding_formula?: ProductFeeDetailManyRoundingFormula;
    rounding_multiplicity?: number | null;
    rounding_type?: ProductFeeDetailManyRoundingType;
    technical_fee_id?: number;
    technical_fee_name?: string;
    updated?: string;
    use_grace_amount?: boolean;
}
